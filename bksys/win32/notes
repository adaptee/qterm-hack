bksys on win32 development notes
Started: 2005-09-19, Jaroslaw Staniek, js at iidea.pl


1. Python installation
Python can be installed in two ways:
a) within Cygwin, using Cygwin's installer (this is the default for now)
   -- we're assuming you will use Cygwin bash shell
b) as Windows app, using standalone installer
   -- we're assuming you will use DOS window as your text shell

Notes: 
- b) is currently recommended - only this is regurally tested
- note that two parallel python installation can introduce conflicts

2. SCons installation
Rquired SCons version is 0.96.91. OLDER WILL NOT WORK!
SCons can be installed in two ways:
a) If you have selected 1a), download .zip file from the url mentioned below, 
and read "Building and Installing SCons on Any System" 
section of SCons Manual: http://www.scons.org/doc/HTML/scons-user/x166.html
b) If you have selected 1b), download Scons with Windows installer from the url mentioned below.

Download path: 
http://sourceforge.net/project/showfiles.php?group_id=30337&package_id=22359&release_id=355094

3. pkg-config installation
Get this: http://www.gimp.org/~tml/gimp/win32/pkgconfig-0.15.zip
Sources. if you want to build it: http://pkgconfig.freedesktop.org/releases/

TODOs:

$ scons debug=full extraincludes=/cygdrive/f/oo/kw/kdelibs4/win

#/cygdrive/f/oo/kw/kdelibs4/kdecore ?

2005-09-26
add KDECORE_SHARED_EXPORT (because e.g. KURL is compiled into dcop, so we need to avoid "inconsistent linking)
for kdecore: ---> #define KDECORE_SHARED_EXPORT KDECORE_EXPORT
for outside code: ---> #define KDECORE_SHARED_EXPORT

Better to store shared libs in $KDEDIR/bin, so every kde app can see all needed libs. 
Modules can still be located in $KDEDIR/lib/kde4/ ...

Usable places:
http://cvs.sourceforge.net/viewcvs.py/qtwin/qt-4/

recent addition for vcproj.:
http://cvs.sourceforge.net/viewcvs.py/qtwin/qt-4/qmake/generators/win32/msvc_vcproj.cpp

2005-10-09
kde4.py: KDECXXFLAGS and KDECCFLAGS options addded; 
	these are transferred to CXXFLAGS, CPPFLAGS and CCFLAGS respectively

2005-10-11
 It's good idea to append always a space to string definitions:
 obj.libs = ' lib1 lib2 ' instead of 'lib1 lib2' because then
 adding 
 
  obj.libs += 'lib3'

  will cause horrible error: 'lib1 lib2lib3'
                                      ^^

 anyway it's still not natural for many devs and thus error-prone...
 By overloading "=" and "+=" operator we could append and prepend ' ' to the
 string... 